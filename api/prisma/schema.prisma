generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model accounts {
  id         Int        @id @default(autoincrement())
  address    String     @db.VarChar
  name       String?    @db.VarChar
  img        String?    @db.VarChar
  updated_at DateTime?  @db.Timestamp(6)
  created_at DateTime   @default(now()) @db.Timestamp(6)
  deleted_at DateTime?  @db.Timestamp(6)
  members    members[]
  messages   messages[]
  readers    readers[]
}

model channels {
  id              Int        @id @default(autoincrement())
  channel_name    String?    @db.VarChar
  total_unread    Int?       @default(0)
  last_message    String?
  last_message_at DateTime?  @db.Timestamp(6)
  members         members[]
  messages        messages[]
  readers         readers[]
}

model members {
  channel_id Int
  account_id Int
  accounts   accounts @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  channels   channels @relation(fields: [channel_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([channel_id, account_id])
}

model messages {
  id              BigInt    @id @default(autoincrement())
  channel_id      Int
  account_id      Int
  account_address String?   @db.VarChar
  contract_address String?   @db.VarChar
  message_type    String    @db.VarChar
  tx_hash         String?
  token_value     Decimal   @default(0) @db.Decimal(10, 0)
  nft_token_id    String?   @db.VarChar
  nft_token_uri   String?   @db.VarChar
  message         String?
  created_at      DateTime  @default(now()) @db.Timestamp(6)
  deleted_at      DateTime? @db.Timestamp(6)
  accounts        accounts  @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  channels        channels  @relation(fields: [channel_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model readers {
  channel_id Int
  account_id Int
  message_id BigInt
  accounts   accounts @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "members_account_id_fkey")
  channels   channels @relation(fields: [channel_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "members_channel_id_fkey")

  @@id([channel_id, account_id, message_id])
}

model transactions {
  id           Int       @id @default(autoincrement())
  message_id   Int?
  message_type String?   @db.VarChar
  tx_hash      String?
  tx_receipts  String?
  tx_result    String?
  status       String?   @default("\"request\"") @db.VarChar
  img_url      String?   @db.VarChar
  created_at   DateTime? @default(now()) @db.Timestamp(6)
}
