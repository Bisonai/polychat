version: "3.7"
services:
    nextjs:
        container_name: nextjs
        depends_on:
            - mysql
        build:
            context: ./
            dockerfile: ./Dockerfile/nextjs.prod
        volumes:
            - ./:/app
        ports:
            - "3000:3000"
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost/api/health" ]
            start_period: 10s
            retries: 3
            timeout: 10s
            interval: 30s
        restart: unless-stopped
        environment:
            - NEXT_PUBLIC_INFURA_KEY
            - AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY
            - AWS_REGION
            - NEXT_PUBLIC_GOOGLE_ANALYTICS
            - DATABASE_URL
            - NEXT_PUBLIC_CHAIN_ID

    nginx:
        container_name: nginx
        build:
            context: ./
            dockerfile: ./Dockerfile/nginx
        depends_on:
            - nextjs
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
        restart: always
        ports:
            - "80:80"

    mysql:
        container_name: mysql
        build:
            context: ./
            dockerfile: ./Dockerfile/mysql
        volumes:
            - ./mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
        restart: always
        ports:
            - "3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: "${DATABASE_PASSWORD}"
            MYSQL_DATABASE: "${DATABASE_SCHEMA}"
            MYSQL_USER: "${DATABASE_USER}"
            MYSQL_PASSWORD: "${DATABASE_PASSWORD}"
